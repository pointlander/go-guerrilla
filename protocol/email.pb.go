// Code generated by protoc-gen-go.
// source: email.proto
// DO NOT EDIT!

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	email.proto

It has these top-level messages:
	Email
	EmailId
	Encrypted
	InboxResponse
	PublicKey
	PrivateKey
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Email struct {
	Id               *uint64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Date             *uint64 `protobuf:"varint,2,req,name=date" json:"date,omitempty"`
	To               *string `protobuf:"bytes,3,req,name=to" json:"to,omitempty"`
	From             *string `protobuf:"bytes,4,req,name=from" json:"from,omitempty"`
	Subject          *string `protobuf:"bytes,5,req,name=subject" json:"subject,omitempty"`
	Mail             *string `protobuf:"bytes,6,req,name=mail" json:"mail,omitempty"`
	Address          *string `protobuf:"bytes,7,req,name=address" json:"address,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Email) Reset()                    { *m = Email{} }
func (m *Email) String() string            { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()               {}
func (*Email) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Email) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Email) GetDate() uint64 {
	if m != nil && m.Date != nil {
		return *m.Date
	}
	return 0
}

func (m *Email) GetTo() string {
	if m != nil && m.To != nil {
		return *m.To
	}
	return ""
}

func (m *Email) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

func (m *Email) GetSubject() string {
	if m != nil && m.Subject != nil {
		return *m.Subject
	}
	return ""
}

func (m *Email) GetMail() string {
	if m != nil && m.Mail != nil {
		return *m.Mail
	}
	return ""
}

func (m *Email) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

type EmailId struct {
	Timestamp        *int64  `protobuf:"varint,1,req,name=timestamp" json:"timestamp,omitempty"`
	EmailId          *uint64 `protobuf:"varint,2,req,name=email_id" json:"email_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EmailId) Reset()                    { *m = EmailId{} }
func (m *EmailId) String() string            { return proto.CompactTextString(m) }
func (*EmailId) ProtoMessage()               {}
func (*EmailId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *EmailId) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *EmailId) GetEmailId() uint64 {
	if m != nil && m.EmailId != nil {
		return *m.EmailId
	}
	return 0
}

type Encrypted struct {
	Key              []byte `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Data             []byte `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Encrypted) Reset()                    { *m = Encrypted{} }
func (m *Encrypted) String() string            { return proto.CompactTextString(m) }
func (*Encrypted) ProtoMessage()               {}
func (*Encrypted) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Encrypted) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Encrypted) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type InboxResponse struct {
	Emails           []*Encrypted `protobuf:"bytes,1,rep,name=emails" json:"emails,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *InboxResponse) Reset()                    { *m = InboxResponse{} }
func (m *InboxResponse) String() string            { return proto.CompactTextString(m) }
func (*InboxResponse) ProtoMessage()               {}
func (*InboxResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *InboxResponse) GetEmails() []*Encrypted {
	if m != nil {
		return m.Emails
	}
	return nil
}

type PublicKey struct {
	Timestamp        *int64 `protobuf:"varint,1,req,name=timestamp" json:"timestamp,omitempty"`
	N                []byte `protobuf:"bytes,2,req,name=n" json:"n,omitempty"`
	E                *int64 `protobuf:"varint,3,req,name=e" json:"e,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PublicKey) Reset()                    { *m = PublicKey{} }
func (m *PublicKey) String() string            { return proto.CompactTextString(m) }
func (*PublicKey) ProtoMessage()               {}
func (*PublicKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PublicKey) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *PublicKey) GetN() []byte {
	if m != nil {
		return m.N
	}
	return nil
}

func (m *PublicKey) GetE() int64 {
	if m != nil && m.E != nil {
		return *m.E
	}
	return 0
}

type PrivateKey struct {
	Timestamp        *int64   `protobuf:"varint,1,req,name=timestamp" json:"timestamp,omitempty"`
	D                []byte   `protobuf:"bytes,2,req,name=d" json:"d,omitempty"`
	Primes           [][]byte `protobuf:"bytes,3,rep,name=primes" json:"primes,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *PrivateKey) Reset()                    { *m = PrivateKey{} }
func (m *PrivateKey) String() string            { return proto.CompactTextString(m) }
func (*PrivateKey) ProtoMessage()               {}
func (*PrivateKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PrivateKey) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *PrivateKey) GetD() []byte {
	if m != nil {
		return m.D
	}
	return nil
}

func (m *PrivateKey) GetPrimes() [][]byte {
	if m != nil {
		return m.Primes
	}
	return nil
}

func init() {
	proto.RegisterType((*Email)(nil), "protocol.email")
	proto.RegisterType((*EmailId)(nil), "protocol.email_id")
	proto.RegisterType((*Encrypted)(nil), "protocol.encrypted")
	proto.RegisterType((*InboxResponse)(nil), "protocol.inbox_response")
	proto.RegisterType((*PublicKey)(nil), "protocol.public_key")
	proto.RegisterType((*PrivateKey)(nil), "protocol.private_key")
}

func init() { proto.RegisterFile("email.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x90, 0x4f, 0x4b, 0xc4, 0x30,
	0x10, 0xc5, 0xd9, 0xa6, 0xdb, 0xdd, 0x4e, 0xcb, 0xaa, 0xf1, 0x92, 0x63, 0x89, 0x20, 0x3d, 0x55,
	0x10, 0xf6, 0xe4, 0x87, 0x29, 0x69, 0x33, 0x42, 0xec, 0x9f, 0x84, 0x24, 0x2b, 0xf6, 0xdb, 0x4b,
	0x67, 0xb7, 0x7a, 0x11, 0x4f, 0xc9, 0xe4, 0x37, 0xf3, 0xde, 0xcb, 0x40, 0x81, 0x93, 0x32, 0x63,
	0xe3, 0xbc, 0x8d, 0x96, 0x1f, 0xe9, 0xe8, 0xed, 0x28, 0x07, 0xd8, 0x13, 0xe0, 0x00, 0x89, 0xd1,
	0x62, 0x57, 0x25, 0x75, 0xca, 0x4b, 0x48, 0xb5, 0x8a, 0x28, 0x12, 0xaa, 0x00, 0x92, 0x68, 0x05,
	0xab, 0x92, 0x3a, 0x5f, 0xc9, 0xbb, 0xb7, 0x93, 0x48, 0xa9, 0xba, 0x83, 0x43, 0xb8, 0x74, 0x1f,
	0xd8, 0x47, 0xb1, 0xdf, 0xf0, 0x2a, 0x26, 0xb2, 0x0d, 0x2b, 0xad, 0x3d, 0x86, 0x20, 0x0e, 0xeb,
	0x83, 0x7c, 0x81, 0x23, 0x99, 0xb5, 0x46, 0xf3, 0x07, 0xc8, 0xa3, 0x99, 0x30, 0x44, 0x35, 0x39,
	0xb2, 0x65, 0xfc, 0xfe, 0x17, 0x5f, 0xad, 0xe5, 0x33, 0xe4, 0x38, 0xf7, 0x7e, 0x71, 0x11, 0x35,
	0x2f, 0x80, 0x0d, 0xb8, 0x50, 0x6f, 0x79, 0x8b, 0xa8, 0xa8, 0xaf, 0x94, 0x67, 0x38, 0x99, 0xb9,
	0xb3, 0x5f, 0xad, 0xc7, 0xe0, 0xec, 0x1c, 0x90, 0x3f, 0x41, 0x46, 0x5a, 0x41, 0xec, 0x2a, 0x56,
	0x17, 0xaf, 0x8f, 0xcd, 0xf6, 0xe5, 0xe6, 0x47, 0x51, 0x9e, 0x01, 0xdc, 0xa5, 0x1b, 0x4d, 0xdf,
	0x0e, 0xb8, 0xfc, 0x95, 0x28, 0x87, 0xdd, 0x7c, 0xb5, 0x58, 0xaf, 0x48, 0x4b, 0x60, 0xf2, 0x0d,
	0x0a, 0xe7, 0xcd, 0xa7, 0x8a, 0xf8, 0xcf, 0x9c, 0xbe, 0xcd, 0x9d, 0x20, 0x73, 0x7e, 0xc5, 0x82,
	0x55, 0xac, 0x2e, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x83, 0x67, 0xe9, 0xde, 0x88, 0x01, 0x00,
	0x00,
}
